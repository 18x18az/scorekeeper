# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Country {
  id: Int!
  name: String!
  regions: [Region!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Event {
  awardsFinalized: Boolean!
  end: DateTime!
  eventType: EventType!
  id: Int!
  level: EventLevel!
  location: Location!
  locationId: Int!
  name: String!
  ongoing: Boolean!
  region: Region!
  regionId: Int!
  sku: String!
  start: DateTime!
  teams: [Team!]!
}

enum EventLevel {
  NATIONAL
  OTHER
  REGIONAL
  SIGNATURE
  STATE
  WORLD
}

enum EventType {
  LEAGUE
  TOURNAMENT
  VIRTUAL
  WORKSHOP
}

enum Grade {
  COLLEGe
  ELEMENTARY_SCHOOL
  HIGH_SCHOOL
  MIDDLE_SCHOOL
}

type Location {
  address: String!
  city: String!
  country: String!
  events: [Event!]!
  id: Int!
  latitude: Float!
  longitude: Float!
  postcode: String!
  region: String!
  venue: String!
}

type Program {
  code: String!
  id: Int!
  name: String!
  seasons: [Season!]!
  teams: [Team!]!
}

type Query {
  countries: [Country!]!
  country(id: Int!): Country!
  countryByName(name: String!): Country!
  findAllEvents(awardsFinalized: Boolean, eventLevel: EventLevel, eventType: EventType, locationId: Int, name: String, ongoing: Boolean, regionId: Int): [Event!]!
  findAllPrograms: [Program!]!
  findAllSeasons: [Season!]!
  findAllTeams(grade: Grade, organization: String, programId: Int, regionId: Int, registered: Boolean): [Team!]!
  findTeamByNumber(number: String!): Team!
  program(id: Int!): Program!
  programByCode(code: String!): Program!
  programs: [Program!]!
  regions: [Region!]!
  season(id: Int!): Season!
  seasons: [Season!]!
}

type Region {
  events: [Event!]!
  id: Int!
  name: String!
  teams: [Team!]!
}

type Season {
  id: Int!
  isCurrent: Boolean!
  name: String!
  program: Program!
  programId: Int!
  yearEnd: Int!
  yearStart: Int!
}

type Team {
  events: [Event!]!
  grade: Grade!
  id: Int!
  name: String!
  number: String!
  organization: String!
  program: Program!
  region: Region!
  regionId: Int!
  registered: Boolean!
  robotName: String
}